class Solution {
    public int maxProfit(int[] prices) {
        int max=0,minSoFar=prices[0];
        for(int i=1;i<prices.length;i++){
           if(prices[i]>minSoFar){
               max = Math.max(max,prices[i]-minSoFar);
           }else{
               minSoFar = prices[i];
           }
        }
        return max;
    }
}

//kadanes algo
//  public int maxProfit(int[] prices) {
//         int maxCur=0,maxSoFar=0;
//         for(int i=1;i<prices.length;i++){
//             //it will be zero if it founds a number which is minimum till now.
//             maxCur = Math.max(0,maxCur+=prices[i]-prices[i-1]);
//             maxSoFar = Math.max(maxCur,maxSoFar);
        
//         }
//         return maxSoFar;
//     }