//iterative
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode head2 = null;
        while(head!=null){
            ListNode next = head.next;
            head.next = head2;
            head2 = head;
            head = next;
        }
        return head2;
    }
}

//recursive
class Solution {
    public ListNode reverseList(ListNode head) {
        return reverse(head,null);
    }
    public ListNode reverse(ListNode head,ListNode head2){
            if(head == null)
                return head2;
            ListNode next = head.next;
            head.next = head2;
            return reverse(next,head);
    }
}